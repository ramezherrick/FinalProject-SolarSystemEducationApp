
@{
    ViewData["Title"] = "TakeMoonsQuiz";
}

@{List<string> Discoverers = new List<string>() { "Stephen Hawking", "Albert Einstein", "Alan Turing", "John Nash", "Allan Turing, John Nash" };}
<div class="contentDiv">
    <h1>Moons Quiz: @Model[ViewBag.indexOfMoonToBeTested].englishName</h1>

    @model List<Body>

    <form action="../Student/TakeMoonsQuiz" method="post">

        @{List<string> keyWords = new List<string>() { "mass", "Who", "When", "orbit" };}
        @{List<string> mPlanet = new List<string>() { "1 Ceres", "136199 Eris", "Uranus", "Pluto", "Neptune", "Jupiter", "Mars", "Saturn" };}
        @{int count = 0;}
        @{int count2 = 0;}

        @foreach (Questionsbank qb in ViewBag.questiosBankList)
        {
            if (qb.QuizId == 3)
            {
                <h2>@qb.Question.Question</h2>

                @foreach (string kw in keyWords)
                {
                    List<string> options = new List<string>();
                    if (qb.Question.Question.Contains(kw))
                    {
                        foreach (Body b in Model)
                        {
                            if (kw == "mass")
                            {
                                options.Add(b.mass.massValue.ToString() + "^" + b.mass.massExponent.ToString());
                            }
                            else if (kw == "Who")
                            {
                                if (b.discoveredBy == null || b.discoveredBy.Length < 1)
                                {

                                    options.Add(Discoverers[count2]);
                                    count2++;

                                }
                                else if (!options.Contains(b.discoveredBy))
                                {
                                    options.Add(b.discoveredBy.ToString());
                                }
                                else if (options.Contains(b.discoveredBy))
                                {
                                    options.Add(Discoverers[count2]);
                                    count2++;
                                }
                            }
                            else if (kw == "When")
                            {
                                options.Add(b.discoveryDate.ToString());
                            }
                            else if (kw == "orbit")
                            {
                                if (!options.Contains(b.aroundPlanet.planet.ToString()))
                                {
                                    options.Add(b.aroundPlanet.planet.ToString());
                                }
                                else
                                {
                                    options.Add(mPlanet[count]);
                                    count++;
                                }

                            }
                        }
                    }
                    if (options.Count > 0)
                    {
                        List<string> selections = new List<string>();
                        Random number = new Random();
                        for (int i = 0; i < 4; i++)
                        {
                            int index = number.Next(0, options.Count);
                            selections.Add(options[index]);
                            options.RemoveAt(index);
                        }
                        <select name="answers">
                            @foreach (string s in selections)
                            {
                                <option value="@s">@s</option>
                            }
                        </select>
                        <br /><br />
                    }
                }
            }
            count2 = 0;
            count = 0;
        }

        <br />

        @{ViewBag.testedMoon = Model[ViewBag.indexOfMoonToBeTested];}
        <input type="text" name="englishName" value="@Model[ViewBag.indexOfMoonToBeTested].englishName" hidden />
        <input type="submit" />

    </form>
</div>